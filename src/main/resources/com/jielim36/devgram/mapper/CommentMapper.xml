<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jielim36.devgram.mapper.CommentMapper">

    <!--  Comment DTO  -->
    <resultMap id="CommentDTO" type="com.jielim36.devgram.DTO.PostCommentDTO">
        <id property="id" column="id"/>
        <result property="post_id" column="post_id"/>
        <result property="parent_id" column="parent_id"/>
        <result property="content" column="content"/>
        <result property="created_at" column="created_at"/>
        <result property="updated_at" column="updated_at"/>
        <result property="like_count" column="like_count"/>
        <result property="is_liked" column="is_liked"/>

        <association property="user" javaType="com.jielim36.devgram.DTO.UserDTO">
            <id property="id" column="user_id"/>
            <result property="username" column="username"/>
            <result property="avatar_url" column="avatar_url"/>
        </association>
    </resultMap>

    <select id="getCommentsByPostId" resultMap="CommentDTO">
        SELECT
        c.id, c.post_id, c.parent_id, c.content, c.created_at, c.updated_at,
        u.id AS user_id, u.username, u.avatar_url,
        (
            SELECT COUNT(*) FROM `like` l
            WHERE l.parent_id = c.id
            AND l.type = 'comment'
            AND l.is_deleted = FALSE
        ) AS like_count,
        (
            SELECT COUNT(*) FROM `like` l
            WHERE l.parent_id = c.id
            AND l.type = 'comment'
            AND l.user_id = #{user_id}
            AND l.is_deleted = FALSE
        ) AS is_liked
        FROM
        comment c
        LEFT JOIN
        user u ON c.user_id = u.id
        WHERE
        c.post_id = #{post_id}
    </select>


    <insert id="addComment" parameterType="com.jielim36.devgram.entity.PostCommentEntity" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO comment (post_id, parent_id, user_id, content)
        VALUES (#{post_id}, #{parent_id}, #{user_id}, #{content})
    </insert>

    <delete id="deleteCommentByCommentId" parameterType="long">
        DELETE FROM comment
        WHERE id = #{id}
    </delete>

</mapper>