<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jielim36.devgram.mapper.PostMapper">
    <insert id="addPost" parameterType="com.jielim36.devgram.entity.PostEntity" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO post (user_id, description) VALUES (#{user_id}, #{description})
    </insert>

    <select id="getPopularPosts" resultType="com.jielim36.devgram.entity.PostEntity">
        SELECT
            p.*
        FROM
            post p
        LEFT JOIN
            `like` l
        ON
            p.id = l.parent_id AND l.type = 'post' AND l.is_deleted = FALSE
        GROUP BY
            p.id, p.user_id, p.description, p.created_at, p.updated_at
        ORDER BY
            COUNT(l.id) DESC;
    </select>

    <select id="getPopularPostsWithPagination" resultType="com.jielim36.devgram.entity.PostEntity">
        SELECT
        p.*
        FROM
        post p
        LEFT JOIN
        `like` l
        ON
        p.id = l.parent_id AND l.type = 'post' AND l.is_deleted = FALSE
        GROUP BY
        p.id, p.user_id, p.description, p.created_at, p.updated_at
        ORDER BY
        COUNT(l.id) DESC
        LIMIT #{offset}, #{limit};
    </select>

    <select id="getFollowingPosts" resultType="com.jielim36.devgram.entity.PostEntity">
        SELECT * FROM post
            WHERE user_id IN (SELECT following_id FROM follow WHERE follower_id = #{user_id})
            ORDER BY created_at DESC;
    </select>

    <select id="getFollowingPostsWithPagination" resultType="com.jielim36.devgram.entity.PostEntity">
        SELECT * FROM post
        WHERE user_id IN (SELECT following_id FROM follow WHERE follower_id = #{user_id})
        ORDER BY created_at DESC
        LIMIT #{offset}, #{limit};
    </select>

    <select id="getPostByPostId" resultType="com.jielim36.devgram.entity.PostEntity">
        SELECT * FROM post WHERE id = #{id};
    </select>

    <select id="getPostsByUserId" resultType="com.jielim36.devgram.entity.PostEntity">
        SELECT * FROM post WHERE user_id = #{user_id};
    </select>

    <delete id="deletePostByPostId" parameterType="long">
        DELETE FROM post WHERE id = #{id};
    </delete>

    <update id="updatePost" parameterType="com.jielim36.devgram.entity.PostEntity">
        UPDATE post SET description = #{description} WHERE id = #{id};
    </update>

</mapper>