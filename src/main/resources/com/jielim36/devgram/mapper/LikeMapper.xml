<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jielim36.devgram.mapper.LikeMapper">

    <resultMap id="LikeEntityResultMap" type="com.jielim36.devgram.entity.LikeEntity">
        <id property="id" column="id"/>
        <result property="parent_id" column="parent_id"/>
        <result property="user_id" column="user_id"/>
        <result property="type" column="type" javaType="com.jielim36.devgram.enums.LikeTypeEnum"
                typeHandler="org.apache.ibatis.type.EnumOrdinalTypeHandler"/>
        <result property="created_at" column="created_at"/>
    </resultMap>

<!--    Like DTO-->
    <resultMap id="LikeDTOResultMap" type="com.jielim36.devgram.DTO.LikeDTO">
        <id property="id" column="id"/>
        <result property="parent_id" column="parent_id"/>
        <result property="type" column="type"/>
        <result property="created_at" column="created_at"/>
        <association property="user" javaType="com.jielim36.devgram.DTO.UserDTO">
            <id property="id" column="user_id"/>
            <result property="username" column="username"/>
            <result property="avatar_url" column="avatar_url"/>
        </association>
    </resultMap>

    <insert id="addLike" keyProperty="id" useGeneratedKeys="true">
        INSERT INTO `like` (type, parent_id, user_id) VALUES (#{type}, #{parent_id}, #{user_id})
        ON DUPLICATE KEY UPDATE
        is_deleted = FALSE,
        updated_at = CURRENT_TIMESTAMP
    </insert>

    <update id="removeLike" parameterType="com.jielim36.devgram.entity.LikeEntity">
        UPDATE `like`
            SET is_deleted = TRUE
            WHERE user_id = #{user_id}
            AND parent_id = #{parent_id}
            AND type = #{type};
    </update>

    <select id="getLikesByPostId" resultMap="LikeDTOResultMap">
        SELECT
            l.id,
            l.type,
            l.parent_id,
            l.created_at,
            u.id AS user_id,
            u.username,
            u.avatar_url
        FROM
            `like` l
        INNER JOIN
            `user` u ON l.user_id = u.id
        WHERE
            l.parent_id = #{parent_id}
        AND
            l.type = 'post'
        AND
            l.is_deleted = FALSE;
    </select>

    <select id="getLikesCountByParentId" resultType="int">
        SELECT
            COUNT(*)
        FROM
            `like`
        WHERE
            parent_id = #{parent_id} AND
            type = #{type};
    </select>

    <select id="isLikedByUser" resultMap="LikeEntityResultMap">
        SELECT
            *
        FROM
            `like`
        WHERE
            parent_id = #{parent_id} AND
            user_id = #{user_id} AND
            type = #{type};
    </select>

    <delete id="deleteLikesByCommentId" parameterType="long">
        DELETE FROM `like`
        WHERE parent_id = #{parent_id}
        AND type = 'comment';
    </delete>

    <delete id="deleteLikesByPostId" parameterType="long">
        DELETE FROM `like`
        WHERE parent_id = #{post_id}
        AND type = 'post';
    </delete>

    <delete id="deleteCommentLikesByPostId" parameterType="long">
        DELETE FROM `like`
        WHERE type = "comment"
        AND parent_id IN (
            SELECT id FROM `comment` where post_id = #{post_id}
        )
    </delete>
</mapper>